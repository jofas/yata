version: "3.7"

# TODO: multiple networks ...
#       compose for debuggin (only keycloak and database)
#       use .env file for populating this file

services:
  frontend:
    image: yata_frontend_webapp
    ports:
      - ${FRONTEND_PORT}:80

  api:
    image: yata_api
    ports:
      - ${YATA_API_PORT}:${YATA_API_PORT}
    environment:
      YATA_API_KEYCLOAK_PROXY_SERVER: ${KEYCLOAK_PROXY_SERVER_NAME}
      YATA_API_KEYCLOAK_PROXY_PORT: ${KEYCLOAK_PROXY_PORT}
      YATA_API_MONGODB_SERVER: ${MONGODB_SERVER_NAME}
    depends_on:
      keycloak_proxy:
        condition: service_started
    restart: on-failure

  keycloak_proxy:
    image: keycloak_proxy
    ports:
      - ${KEYCLOAK_PROXY_PORT}:${KEYCLOAK_PROXY_PORT}
    environment:
      KEYCLOAK_PROXY_CLIENT_ID: ${KEYCLOAK_PROXY_CLIENT_ID}
      KEYCLOAK_PROXY_REALM: ${KEYCLOAK_PROXY_REALM}
      KEYCLOAK_PROXY_KEYCLOAK_SERVER: ${KEYCLOAK_SERVER_NAME}
      KEYCLOAK_PROXY_PORT: ${KEYCLOAK_PROXY_PORT}
    container_name: ${KEYCLOAK_PROXY_SERVER_NAME}
    depends_on:
      keycloak:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak
    #ports:
    #  - 8080:8080
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: ${KEYCLOAK_MYSQL_SERVER_NAME}
      DB_USER: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    container_name: ${KEYCLOAK_SERVER_NAME}
    depends_on:
      keycloak_mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8080/auth/realms/yata/protocol/openid-connect/certs"]
      interval: 10s
      retries: 20

  keycloak_mysql:
    image: mysql:5.7
    volumes:
      - ./volumes/keycloak:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: keycloak
    container_name: ${KEYCLOAK_MYSQL_SERVER_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      retries: 20

  mongodb:
    image: mongo
    # TODO: in debug mode expose port
    #ports:
    #  - 27017:27017
    volumes:
      - ./volumes/mongo:/data/db
    container_name: ${MONGODB_SERVER_NAME}
